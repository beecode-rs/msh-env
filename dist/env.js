import { logger } from '#src/util/logger';
export class Env {
    names;
    _locationStrategies;
    _namingStrategies;
    constructor(params) {
        const { locationStrategies, namingStrategies, names } = params;
        this._locationStrategies = locationStrategies;
        this._namingStrategies = namingStrategies;
        this.names = [...names];
    }
    _envNames() {
        const { result } = this._namingStrategies.reduce((acc, ns) => {
            acc.lastResult = ns.names([...acc.lastResult]);
            acc.result.push(...acc.lastResult);
            return acc;
        }, { lastResult: [...this.names].reverse(), result: [...this.names].reverse() });
        const resultNames = [...result].reverse();
        logger().debug(`Try names in this order: [${resultNames.join(', ')}]`);
        return resultNames;
    }
    envValue() {
        return this._envNames().reduce((envResult, name) => {
            if (envResult) {
                return envResult;
            }
            return this._locationStrategies.reduce((locResult, ls) => {
                if (locResult) {
                    return locResult;
                }
                return ls.valueByName(name);
            }, undefined);
        }, undefined);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vudi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFekMsTUFBTSxPQUFPLEdBQUc7SUFDTixLQUFLLENBQVU7SUFDTCxtQkFBbUIsQ0FBb0I7SUFDdkMsaUJBQWlCLENBQWtCO0lBRXRELFlBQVksTUFBdUc7UUFDbEgsTUFBTSxFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxHQUFHLE1BQU0sQ0FBQTtRQUM5RCxJQUFJLENBQUMsbUJBQW1CLEdBQUcsa0JBQWtCLENBQUE7UUFDN0MsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGdCQUFnQixDQUFBO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFBO0lBQ3hCLENBQUM7SUFFUyxTQUFTO1FBQ2xCLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUMvQyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRTtZQUNYLEdBQUcsQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUE7WUFDOUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUE7WUFFbEMsT0FBTyxHQUFHLENBQUE7UUFDWCxDQUFDLEVBQ0QsRUFBRSxVQUFVLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUM1RSxDQUFBO1FBRUQsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBQ3pDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyw2QkFBNkIsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7UUFFdEUsT0FBTyxXQUFXLENBQUE7SUFDbkIsQ0FBQztJQUVELFFBQVE7UUFDUCxPQUFPLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLENBQXFCLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFO1lBQ3RFLElBQUksU0FBUyxFQUFFLENBQUM7Z0JBQ2YsT0FBTyxTQUFTLENBQUE7WUFDakIsQ0FBQztZQUVELE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBcUIsQ0FBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUU7Z0JBQzVFLElBQUksU0FBUyxFQUFFLENBQUM7b0JBQ2YsT0FBTyxTQUFTLENBQUE7Z0JBQ2pCLENBQUM7Z0JBRUQsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFBO1lBQzVCLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQTtRQUNkLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQTtJQUNkLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR5cGUgTG9jYXRpb25TdHJhdGVneSB9IGZyb20gJyNzcmMvbG9jYXRpb24tc3RyYXRlZ3knXG5pbXBvcnQgeyB0eXBlIE5hbWluZ1N0cmF0ZWd5IH0gZnJvbSAnI3NyYy9uYW1pbmctc3RyYXRlZ3knXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcjc3JjL3V0aWwvbG9nZ2VyJ1xuXG5leHBvcnQgY2xhc3MgRW52IHtcblx0cmVhZG9ubHkgbmFtZXM6IHN0cmluZ1tdXG5cdHByb3RlY3RlZCByZWFkb25seSBfbG9jYXRpb25TdHJhdGVnaWVzOiBMb2NhdGlvblN0cmF0ZWd5W11cblx0cHJvdGVjdGVkIHJlYWRvbmx5IF9uYW1pbmdTdHJhdGVnaWVzOiBOYW1pbmdTdHJhdGVneVtdXG5cblx0Y29uc3RydWN0b3IocGFyYW1zOiB7IG5hbWVzOiBzdHJpbmdbXTsgbG9jYXRpb25TdHJhdGVnaWVzOiBMb2NhdGlvblN0cmF0ZWd5W107IG5hbWluZ1N0cmF0ZWdpZXM6IE5hbWluZ1N0cmF0ZWd5W10gfSkge1xuXHRcdGNvbnN0IHsgbG9jYXRpb25TdHJhdGVnaWVzLCBuYW1pbmdTdHJhdGVnaWVzLCBuYW1lcyB9ID0gcGFyYW1zXG5cdFx0dGhpcy5fbG9jYXRpb25TdHJhdGVnaWVzID0gbG9jYXRpb25TdHJhdGVnaWVzXG5cdFx0dGhpcy5fbmFtaW5nU3RyYXRlZ2llcyA9IG5hbWluZ1N0cmF0ZWdpZXNcblx0XHR0aGlzLm5hbWVzID0gWy4uLm5hbWVzXVxuXHR9XG5cblx0cHJvdGVjdGVkIF9lbnZOYW1lcygpOiBzdHJpbmdbXSB7XG5cdFx0Y29uc3QgeyByZXN1bHQgfSA9IHRoaXMuX25hbWluZ1N0cmF0ZWdpZXMucmVkdWNlPHsgcmVzdWx0OiBzdHJpbmdbXTsgbGFzdFJlc3VsdDogc3RyaW5nW10gfT4oXG5cdFx0XHQoYWNjLCBucykgPT4ge1xuXHRcdFx0XHRhY2MubGFzdFJlc3VsdCA9IG5zLm5hbWVzKFsuLi5hY2MubGFzdFJlc3VsdF0pXG5cdFx0XHRcdGFjYy5yZXN1bHQucHVzaCguLi5hY2MubGFzdFJlc3VsdClcblxuXHRcdFx0XHRyZXR1cm4gYWNjXG5cdFx0XHR9LFxuXHRcdFx0eyBsYXN0UmVzdWx0OiBbLi4udGhpcy5uYW1lc10ucmV2ZXJzZSgpLCByZXN1bHQ6IFsuLi50aGlzLm5hbWVzXS5yZXZlcnNlKCkgfVxuXHRcdClcblxuXHRcdGNvbnN0IHJlc3VsdE5hbWVzID0gWy4uLnJlc3VsdF0ucmV2ZXJzZSgpXG5cdFx0bG9nZ2VyKCkuZGVidWcoYFRyeSBuYW1lcyBpbiB0aGlzIG9yZGVyOiBbJHtyZXN1bHROYW1lcy5qb2luKCcsICcpfV1gKVxuXG5cdFx0cmV0dXJuIHJlc3VsdE5hbWVzXG5cdH1cblxuXHRlbnZWYWx1ZSgpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuXHRcdHJldHVybiB0aGlzLl9lbnZOYW1lcygpLnJlZHVjZTxzdHJpbmcgfCB1bmRlZmluZWQ+KChlbnZSZXN1bHQsIG5hbWUpID0+IHtcblx0XHRcdGlmIChlbnZSZXN1bHQpIHtcblx0XHRcdFx0cmV0dXJuIGVudlJlc3VsdFxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdGhpcy5fbG9jYXRpb25TdHJhdGVnaWVzLnJlZHVjZTxzdHJpbmcgfCB1bmRlZmluZWQ+KChsb2NSZXN1bHQsIGxzKSA9PiB7XG5cdFx0XHRcdGlmIChsb2NSZXN1bHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gbG9jUmVzdWx0XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbHMudmFsdWVCeU5hbWUobmFtZSlcblx0XHRcdH0sIHVuZGVmaW5lZClcblx0XHR9LCB1bmRlZmluZWQpXG5cdH1cbn1cbiJdfQ==