import { ConvertStrategyBase64ToString } from '#src/convert-strategy/base64-to-string';
import { ConvertStrategyToBoolean } from '#src/convert-strategy/to-boolean';
import { ConvertStrategyToJson } from '#src/convert-strategy/to-json';
import { ConvertStrategyToNumber } from '#src/convert-strategy/to-number';
import { ConvertStrategyToString } from '#src/convert-strategy/to-string';
import { Env } from '#src/env';
import { EnvType } from '#src/env/type';
export class EnvFactory {
    _env;
    constructor(params) {
        const { names, locationStrategies, namingStrategies } = params;
        this._env = new Env({ locationStrategies, names, namingStrategies });
    }
    get string() {
        return new EnvType({ convertStrategy: new ConvertStrategyToString(), env: this._env });
    }
    get boolean() {
        return new EnvType({ convertStrategy: new ConvertStrategyToBoolean(), env: this._env });
    }
    get number() {
        return new EnvType({ convertStrategy: new ConvertStrategyToNumber(), env: this._env });
    }
    json() {
        return new EnvType({ convertStrategy: new ConvertStrategyToJson(), env: this._env });
    }
    get base64() {
        return new EnvType({ convertStrategy: new ConvertStrategyBase64ToString(), env: this._env });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbnYvZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQTtBQUN0RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQTtBQUMzRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQTtBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQTtBQUN6RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQTtBQUN6RSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBQzlCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFJdkMsTUFBTSxPQUFPLFVBQVU7SUFDSCxJQUFJLENBQUs7SUFFNUIsWUFBWSxNQUF1RztRQUNsSCxNQUFNLEVBQUUsS0FBSyxFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixFQUFFLEdBQUcsTUFBTSxDQUFBO1FBQzlELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFBO0lBQ3JFLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDVCxPQUFPLElBQUksT0FBTyxDQUFTLEVBQUUsZUFBZSxFQUFFLElBQUksdUJBQXVCLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUE7SUFDL0YsQ0FBQztJQUVELElBQUksT0FBTztRQUNWLE9BQU8sSUFBSSxPQUFPLENBQVUsRUFBRSxlQUFlLEVBQUUsSUFBSSx3QkFBd0IsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQTtJQUNqRyxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1QsT0FBTyxJQUFJLE9BQU8sQ0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLHVCQUF1QixFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFBO0lBQy9GLENBQUM7SUFFRCxJQUFJO1FBQ0gsT0FBTyxJQUFJLE9BQU8sQ0FBSSxFQUFFLGVBQWUsRUFBRSxJQUFJLHFCQUFxQixFQUFLLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFBO0lBQzNGLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDVCxPQUFPLElBQUksT0FBTyxDQUFTLEVBQUUsZUFBZSxFQUFFLElBQUksNkJBQTZCLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUE7SUFDckcsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udmVydFN0cmF0ZWd5QmFzZTY0VG9TdHJpbmcgfSBmcm9tICcjc3JjL2NvbnZlcnQtc3RyYXRlZ3kvYmFzZTY0LXRvLXN0cmluZydcbmltcG9ydCB7IENvbnZlcnRTdHJhdGVneVRvQm9vbGVhbiB9IGZyb20gJyNzcmMvY29udmVydC1zdHJhdGVneS90by1ib29sZWFuJ1xuaW1wb3J0IHsgQ29udmVydFN0cmF0ZWd5VG9Kc29uIH0gZnJvbSAnI3NyYy9jb252ZXJ0LXN0cmF0ZWd5L3RvLWpzb24nXG5pbXBvcnQgeyBDb252ZXJ0U3RyYXRlZ3lUb051bWJlciB9IGZyb20gJyNzcmMvY29udmVydC1zdHJhdGVneS90by1udW1iZXInXG5pbXBvcnQgeyBDb252ZXJ0U3RyYXRlZ3lUb1N0cmluZyB9IGZyb20gJyNzcmMvY29udmVydC1zdHJhdGVneS90by1zdHJpbmcnXG5pbXBvcnQgeyBFbnYgfSBmcm9tICcjc3JjL2VudidcbmltcG9ydCB7IEVudlR5cGUgfSBmcm9tICcjc3JjL2Vudi90eXBlJ1xuaW1wb3J0IHsgdHlwZSBMb2NhdGlvblN0cmF0ZWd5IH0gZnJvbSAnI3NyYy9sb2NhdGlvbi1zdHJhdGVneSdcbmltcG9ydCB7IHR5cGUgTmFtaW5nU3RyYXRlZ3kgfSBmcm9tICcjc3JjL25hbWluZy1zdHJhdGVneSdcblxuZXhwb3J0IGNsYXNzIEVudkZhY3Rvcnkge1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX2VudjogRW52XG5cblx0Y29uc3RydWN0b3IocGFyYW1zOiB7IG5hbWVzOiBzdHJpbmdbXTsgbG9jYXRpb25TdHJhdGVnaWVzOiBMb2NhdGlvblN0cmF0ZWd5W107IG5hbWluZ1N0cmF0ZWdpZXM6IE5hbWluZ1N0cmF0ZWd5W10gfSkge1xuXHRcdGNvbnN0IHsgbmFtZXMsIGxvY2F0aW9uU3RyYXRlZ2llcywgbmFtaW5nU3RyYXRlZ2llcyB9ID0gcGFyYW1zXG5cdFx0dGhpcy5fZW52ID0gbmV3IEVudih7IGxvY2F0aW9uU3RyYXRlZ2llcywgbmFtZXMsIG5hbWluZ1N0cmF0ZWdpZXMgfSlcblx0fVxuXG5cdGdldCBzdHJpbmcoKTogRW52VHlwZTxzdHJpbmc+IHtcblx0XHRyZXR1cm4gbmV3IEVudlR5cGU8c3RyaW5nPih7IGNvbnZlcnRTdHJhdGVneTogbmV3IENvbnZlcnRTdHJhdGVneVRvU3RyaW5nKCksIGVudjogdGhpcy5fZW52IH0pXG5cdH1cblxuXHRnZXQgYm9vbGVhbigpOiBFbnZUeXBlPGJvb2xlYW4+IHtcblx0XHRyZXR1cm4gbmV3IEVudlR5cGU8Ym9vbGVhbj4oeyBjb252ZXJ0U3RyYXRlZ3k6IG5ldyBDb252ZXJ0U3RyYXRlZ3lUb0Jvb2xlYW4oKSwgZW52OiB0aGlzLl9lbnYgfSlcblx0fVxuXG5cdGdldCBudW1iZXIoKTogRW52VHlwZTxudW1iZXI+IHtcblx0XHRyZXR1cm4gbmV3IEVudlR5cGU8bnVtYmVyPih7IGNvbnZlcnRTdHJhdGVneTogbmV3IENvbnZlcnRTdHJhdGVneVRvTnVtYmVyKCksIGVudjogdGhpcy5fZW52IH0pXG5cdH1cblxuXHRqc29uPFQ+KCk6IEVudlR5cGU8VD4ge1xuXHRcdHJldHVybiBuZXcgRW52VHlwZTxUPih7IGNvbnZlcnRTdHJhdGVneTogbmV3IENvbnZlcnRTdHJhdGVneVRvSnNvbjxUPigpLCBlbnY6IHRoaXMuX2VudiB9KVxuXHR9XG5cblx0Z2V0IGJhc2U2NCgpOiBFbnZUeXBlPHN0cmluZz4ge1xuXHRcdHJldHVybiBuZXcgRW52VHlwZTxzdHJpbmc+KHsgY29udmVydFN0cmF0ZWd5OiBuZXcgQ29udmVydFN0cmF0ZWd5QmFzZTY0VG9TdHJpbmcoKSwgZW52OiB0aGlzLl9lbnYgfSlcblx0fVxufVxuIl19